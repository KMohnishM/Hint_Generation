# Generated by Django 5.2 on 2025-06-12 08:01

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Hint',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('level', models.IntegerField(default=1)),
                ('content', models.TextField()),
                ('hint_type', models.CharField(choices=[('conceptual', 'Conceptual'), ('approach', 'Approach'), ('implementation', 'Implementation'), ('debug', 'Debugging')], default='conceptual', max_length=20)),
                ('is_conceptual', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['level', 'hint_type'],
            },
        ),
        migrations.CreateModel(
            name='Problem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('difficulty', models.CharField(choices=[('easy', 'Easy'), ('medium', 'Medium'), ('hard', 'Hard')], max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Attempt',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.TextField()),
                ('status', models.CharField(choices=[('success', 'Success'), ('failed', 'Failed'), ('error', 'Error')], max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('execution_time', models.FloatField(blank=True, null=True)),
                ('memory_used', models.FloatField(blank=True, null=True)),
                ('error_message', models.TextField(blank=True)),
                ('test_cases_passed', models.IntegerField(default=0)),
                ('total_test_cases', models.IntegerField(default=0)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('problem', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hints.problem')),
            ],
        ),
        migrations.CreateModel(
            name='HintDelivery',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('delivered_at', models.DateTimeField(auto_now_add=True)),
                ('was_helpful', models.BooleanField(null=True)),
                ('user_feedback', models.TextField(blank=True)),
                ('was_auto_triggered', models.BooleanField(default=False)),
                ('trigger_reason', models.CharField(blank=True, max_length=100)),
                ('attempt', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='hints.attempt')),
                ('hint', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hints.hint')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='HintEvaluation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('evaluation_score', models.FloatField()),
                ('safety_score', models.FloatField()),
                ('helpfulness_score', models.FloatField()),
                ('progress_alignment_score', models.FloatField()),
                ('pedagogical_value_score', models.FloatField()),
                ('evaluation_notes', models.TextField(blank=True)),
                ('evaluated_at', models.DateTimeField(auto_now_add=True)),
                ('hint_delivery', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hints.hintdelivery')),
            ],
        ),
        migrations.AddField(
            model_name='hint',
            name='problem',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hints.problem'),
        ),
        migrations.CreateModel(
            name='UserProgress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_activity', models.DateTimeField(auto_now=True)),
                ('last_attempt', models.DateTimeField(blank=True, null=True)),
                ('attempts_count', models.IntegerField(default=0)),
                ('failed_attempts_count', models.IntegerField(default=0)),
                ('is_solved', models.BooleanField(default=False)),
                ('current_hint_level', models.IntegerField(default=0)),
                ('last_hint_at', models.DateTimeField(blank=True, null=True)),
                ('inactivity_threshold', models.IntegerField(default=300)),
                ('problem', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hints.problem')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('user', 'problem')},
            },
        ),
    ]
